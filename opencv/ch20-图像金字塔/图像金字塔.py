"""
一般情况下 我们 处理是一副具有固定分辨率的图像。
但是有些情况下 我们对同一图像的不同分辨率的子图像处理。
比如我们在一幅图像中查找某个目标 比如脸 我们不知 目标在图像中的尺寸大小。
这种情况下我们创建创建一组图像,这些图像是具有不同分 率的原始图像。
我们把这组图像叫做图像金字塔
简单来说 就是同一图像的不同分辨率的子图集合 。

如果我们把最大的图像放在底部，最小的放在顶部
看起来像一座金字塔， 故而得名：图像金字塔。
有两类图像金字塔： 高斯金字塔和拉普拉斯金字塔。

高斯金字塔的顶部是通过将底部图像中的连续的行和列去除得到的。
图像中的每个像素值等于下一层图像中 5 个像素的高斯加权平均值。
这样 操作一次一个 MxN 的图像就变成了一个 M/2xN/2 的图像。
所以 这幅图像的面积就变为原来图像面积的四分之一。 这称为 Octave。
连续进行这样 的操作我们就会得到一个分辨率不断下降的图像金字塔。
我们可以使用函数 cv2.pyrDown() 和 cv2.pyrUp() 构建图像金字塔。
"""

import cv2
import numpy as np

higher_reso = cv2.imread('ch20-图像金字塔/messi5.jpg')
# 函数cv2.pyrDown()从一个大分辨率大尺寸的图像向上构建一个金子塔
# 尺寸变小分辨率降低 。
lower_reso = cv2.pyrDown(higher_reso)
cv2.imshow('lower_reso', lower_reso)

# 从一个低分率小尺寸的图像向下构建一个子塔 尺寸变大 但分辨率不会增加
higher_reso2 = cv2.pyrUp(lower_reso)
cv2.imshow('higher_reso2', higher_reso2)


cv2.waitKey(0)
cv2.destroyAllWindows()
